<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>csharp on atreezilla</title><link>https://atreezilla.com/tags/csharp.html</link><description>Recent content in csharp on atreezilla</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 27 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://atreezilla.com/tags/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>–ú–∞—Å—Å–∏–≤—ã C#</title><link>https://atreezilla.com/posts/csharp-arrays.html</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-arrays.html</guid><description>–ú–∞—Å—Å–∏–≤—ã üîóint[] nums2 = new int[4] { 1, 2, 3, 5 }; int[] nums3 = new int[] { 1, 2, 3, 5 }; int[] nums4 = new[] { 1, 2, 3, 5 }; int[] nums5 = { 1, 2, 3, 5 }; –ú–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã üîóint[,] nums1; int[,] nums2 = new int[2, 3]; int[,] nums3 = new int[2, 3] { { 0, 1, 2 }, { 3, 4, 5 } }; int[,] nums4 = new int[,] { { 0, 1, 2 }, { 3, 4, 5 } }; int[,] nums5 = new [,]{ { 0, 1, 2 }, { 3, 4, 5 } }; int[,] nums6 = { { 0, 1, 2 }, { 3, 4, 5 } }; –ú–∞—Å—Å–∏–≤ –º–∞—Å—Å–∏–≤–æ–≤ üîóint[][] nums = new int[3][]; // –≤—ã–¥–µ–ª—è–µ–º –ø–∞–º—è—Ç—å –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ nums[0] = new int[2] { 1, 2 }; // –≤—ã–¥–µ–ª—è–µ–º –ø–∞–º—è—Ç—å –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ nums[1] = new int[3] { 1, 2, 3 }; // –≤—ã–¥–µ–ª—è–µ–º –ø–∞–º—è—Ç—å –¥–ª—è —Ç—Ä–µ—Ç—å–µ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ nums[2] = new int[5] { 1, 2, 3, 4, 5 }; int[][,] nums2 = new int[3][,] { new int[,] { {1,2}, {3,4} }, new int[,] { {1,2}, {3,6} }, new int[,] { {1,2}, {3,5}, {8, 13} } };</description></item><item><title>–°—Ç—Ä–æ–∫–∏ C#</title><link>https://atreezilla.com/posts/csharp-strings.html</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-strings.html</guid><description>–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ üîóusing System.IO; string path = @&amp;#34;C:\apache\hta.txt&amp;#34;; FileInfo fileInf = new FileInfo(path); if (fileInf.Exists) { Console.WriteLine( &amp;#34;–ò–º—è —Ñ–∞–π–ª–∞: {0}&amp;#34;, fileInf.Name); Console.WriteLine( &amp;#34;–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: {0}&amp;#34;, fileInf.CreationTime); Console.WriteLine( &amp;#34;–†–∞–∑–º–µ—Ä: {0}&amp;#34;, fileInf.Length); } –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ üîóstring s1 = &amp;#34;hello&amp;#34;; string s2 = null; string s3 = new String(&amp;#39;a&amp;#39;, 6); // —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∫–∞ &amp;#34;aaaaaa&amp;#34; string s4 = new String(new char[]{&amp;#39;w&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;d&amp;#39;}); –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ String —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –µ–≥–æ –º–µ—Ç–æ–¥—ã, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ:</description></item><item><title>–°—Ç—Ä—É–∫—Ç—É—Ä—ã C#</title><link>https://atreezilla.com/posts/csharp-structures.html</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-structures.html</guid><description>–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è enum üîóenum Time : byte { Morning, Afternoon, Evening, Night } –ö–æ—Ä—Ç–µ–∂–∏ üîóvar tuple = (5, 10); private static (int, int) GetValues() { var result = (1, 3); return result; } –°—Ç—Ä—É–∫—Ç—É—Ä—ã üîóstruct User { public string name; public int age; public void DisplayInfo() { Console.WriteLine($&amp;#34;Name: {name} Age: {age}&amp;#34;); } } User tom; tom.name = &amp;#34;Tom&amp;#34;; tom.age = 34; tom.DisplayInfo(); –ö–ª–∞—Å—Å—ã üîóclass User { private string _name; private int _age; public string Name {get {return _name;} set {_name =value;}} public int Age {get {return _age;} } public User(string name,int age){ _name =name; _age = age; } public void DisplayInfo( params int[] ar) { foreach(var item in ar){ Console.</description></item><item><title>–ê—Ä—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ C#</title><link>https://atreezilla.com/posts/csharp-arithmetic-operations.html</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-arithmetic-operations.html</guid><description>–í —Å—Ç–∞—Ç—å–µ –∫–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—Å–∞–Ω—ã –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ C# –∞ —Ç–∞–∫ –∂–µ —Å–ø–æ—Å–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤
+ , - , * , / , % , ++ , --
–ü–æ—Ä–∞–∑—Ä—è–¥–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ üîó&amp;amp;(–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ),
|(–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–ª–æ–∂–µ–Ω–∏–µ),
^(–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò),
~ (–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ –∏–ª–∏ –∏–Ω–≤–µ—Ä—Å–∏—è)
–û–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è üîó+= , -= , *= , /= , %= , &amp;amp;= , |= , ^= , &amp;lt;&amp;lt;= , &amp;gt;&amp;gt;=
–£—Å–ª–æ–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è üîó==,!=,&amp;lt;,&amp;gt;,&amp;lt;=,&amp;gt;=,|,^,&amp;amp;,||,&amp;amp;&amp;amp;,!
–í –∫–∞–∫–∏–µ —Ç–∏–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è üîóbyte &amp;raquo; short, ushort, int, uint, long, ulong, float, double, decimal</description></item><item><title>–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö C#</title><link>https://atreezilla.com/posts/csharp-data-types.html</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-data-types.html</guid><description>–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ C# –æ–ø–∏—Å–∞–Ω–æ –≤ —Å–∂–∞—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ .
//(1 –±–∞–π—Ç) System.Boolean bool isStupid = false; bool isSmarty = true; //(1 –±–∞–π—Ç) –æ—Ç 0 –¥–æ 255 System.Byte byte _month = 1; byte DayOfWeek = 102; //(1 –±–∞–π—Ç) —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç -128 –¥–æ 127 System.SByte sbyte t1 = -101; sbyte t2 = 102; //(2 –±–∞–π—Ç–∞) —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç -32768 –¥–æ 32767 System.Int16 short n1 = 1; short n2 = 102; //(2 –±–∞–π—Ç–∞) —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 65535 System.</description></item><item><title>–£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ C#</title><link>https://atreezilla.com/posts/csharp-conditional-constructs.html</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-conditional-constructs.html</guid><description>–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª–æ–≤–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π C#
var x=11; if(x &amp;gt; 2){ Console.WriteLine( $&amp;#34;–ß–∏—Å–ª–æ {x} –±–æ–ª—å—à–µ —á–∏—Å–ª–∞ 2&amp;#34;);} else if (x &amp;lt; 2){ Console.WriteLine( $&amp;#34;–ß–∏—Å–ª–æ {x} –º–µ–Ω—å—à–µ —á–∏—Å–ª–∞ 2&amp;#34;);} string selection=&amp;#34;&amp;#34;; switch (selection) { case &amp;#34;Y&amp;#34;: Console.WriteLine(&amp;#34;–í—ã –Ω–∞–∂–∞–ª–∏ –±—É–∫–≤—É Y&amp;#34;); break; case &amp;#34;N&amp;#34;: Console.WriteLine(&amp;#34;–í—ã –Ω–∞–∂–∞–ª–∏ –±—É–∫–≤—É N&amp;#34;); break; default: Console.WriteLine( &amp;#34;–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –±—É–∫–≤—É&amp;#34;); break; } int z = selection==&amp;#34;Y&amp;#34;? (1+2) : (3-1);</description></item><item><title>–¶–∏–∫–ª—ã C#</title><link>https://atreezilla.com/posts/csharp-cycles-.html</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://atreezilla.com/posts/csharp-cycles-.html</guid><description>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ü–∏–∫–ª–æ–≤ –≤ —è–∑—ã–∫–µ C# –∫–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—Å–∞–Ω–æ —Å—Ç–∞—Ç—å–µ.
int i = 60; while (i &amp;gt; 0) { Console.WriteLine(Convert.ToString(i, 2).PadLeft(8, &amp;#39;0&amp;#39;)); i--; } for (int i = 0; i &amp;lt; 9; i++) { if (i == 5) break; //continue; Console.Write(i); } i = -1; do { Console.Write(i); i--; } while (i &amp;gt; 0); int[] numbers = new int[] { 1, 2, 3, 4, 5 }; foreach (int i in numbers) { Console.</description></item></channel></rss>